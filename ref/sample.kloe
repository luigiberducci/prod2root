
C==============================================================================
C  SAMPLE
C==============================================================================
C
C  Description:
C  ------------
C Prod2ntu version for root tuple
C  Language:
C  ---------
C  KLOE Fortran
C
C  Author:
C  -------
C Elena Perez del Rio
C
C
C==============================================================================
      SUBROUTINE SAMIN
C==============================================================================
C
C  Description:
C  ------------
C
C==============================================================================
C
$$IMPLICIT

$$include 'sample.inc'
C
C==============================================================================
C
      write(*,*)"SAMIN"
      call inittree()
      RETURN
      END
C
C==============================================================================
      SUBROUTINE SAMRI
C==============================================================================
C
C  Description:
C  ------------
C
C==============================================================================
C
$$IMPLICIT
C
$$INCLUDE 'CALIBINC:ANERROR.INC'
C
C External functions
C
      INTEGER    ANPIST
C
C Local declarations
C
      INTEGER    Status
C
C==============================================================================
C
C Put A_C Error Code to SUCCESS at Run_Init
C
      Status = ANPIST(ANSUCC)
C
      RETURN
      END
C
C==============================================================================
      SUBROUTINE SAMEV
C==============================================================================
C
$$IMPLICIT
C
$$include 'k$itls:evtstruct.inc'  	! Event Information
$$INCLUDE 'C$INC:ERLEVL.INC'
$$INCLUDE 'K$INC:OFERCO.INC'            ! OFFLINE error codes
$$INCLUDE 'K$INC:JOBSTA.INC'
$$INCLUDE 'K$INC:RUNTYP.INC'
$$INCLUDE 'CALIBINC:ANERROR.INC'
$$INCLUDE 'K$ITLS:MAXSTRUCTDIM.INC'     ! Structure-dimentioner
$$INCLUDE 'K$ITLS:EMCSTRUCT.INC'        ! Emc Clusters 
$$include 'k$itls:bposcommon.inc'
$$include 'k$itls:bposstruct.inc'
$$include 'k$itls:tclostruct.inc'	! Tracks-to-Clusters
$$include 'k$itls:eclsstru.inc'         ! Evant Classification 
$$include 'k$itls:getdtfsstruct.cin'    ! DTFS 
$$include 'sample.inc'
    
C
C External functions
C
      INTEGER    ANGIST, ANGOHS, ANGPAR, anptrg
      INTEGER    GetCluStru, TrkV2Stru, gettclostru, getbpos, getdtfsstru
      

      INTEGER    getecls
      INTEGER AlgoNum,StreamNum,TimeSec,TimeMusec,Ndtce,EventType
      integer icurr
      real    currpos,currele,luminosity
      COMMON /EventInfo/StreamNum,AlgoNum,
     &     TimeSec,TimeMusec,Ndtce,mcflag_tg,currpos,currele,luminosity

C
C Local declarations
C
      integer bb
      common/elena/ bb
C
C=============================================================================
C
	bb=nrun

C      write(*,*)'FORTRAN',bb
        call fillntu() 	
      RETURN
      END
C
C==============================================================================
      SUBROUTINE SAMRE
C==============================================================================
C
$$IMPLICIT
C
C==============================================================================
C
      RETURN 
      END
C

C==============================================================================
      SUBROUTINE SAMHB
C==============================================================================
C
$$IMPLICIT
C
$$INCLUDE 'C$INC:ERLEVL.INC'
$$INCLUDE 'CALIBINC:ANERROR.INC'
$$include 'sample.inc'
C
C
C External functions
C
      INTEGER    ANGOHS
C
C Local declarations
C
      INTEGER    Status, MinHisId, MaxHisId
      INTEGER    NtuId
      LOGICAL    HisFlg
C
C==============================================================================
C
      RETURN 
      END
C
C==============================================================================
      SUBROUTINE SAMTK
C==============================================================================
C
C  Description:
C  ------------
C
C==============================================================================
C
$$IMPLICIT
C
$$INCLUDE 'A_C_LIBRARY:ANERROR.INC'
$$INCLUDE 'S_I$LIBRARY:NOARGINC.INC'
$$include 'sample.inc'
C
C External functions
C
      INTEGER   UIDFFI, UIUSGP, UIACME, UIGTYE
C
C Local declarations
C
      INTEGER   Status, MENUF, MENUL, IGROUP
      CHARACTER Verb*40, Prompt*100
C
C==============================================================================
C
      Status=UIDFFI( 
     $'$SAMPLE/sample.uid'
     $,IGROUP,MENUF,N$A,N$A,MENUL,N$A )
      Status = UIUSGP(IGROUP,N$A)
 10   Status = UIACME(MENUF,Verb,N$A) ! Display menu
C     
      if(verb.eq.'SHOW')then
         goto 10
      end if
      
      RETURN
      END
C     

C=============================================================================
      SUBROUTINE SAMFI
C===========================================================================
	write(*,*)'Run End routine'
      	call closetree() 

      RETURN
      END
C
C===========================================================================














